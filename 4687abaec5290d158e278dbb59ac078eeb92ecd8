{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ab55f17d_7af6d693",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-12T09:36:17Z",
      "side": 1,
      "message": "Thanks, Tony. We\u0027re getting there :-)",
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a112c895_78a20383",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-12T09:44:05Z",
      "side": 1,
      "message": "Blocking the submission for now, just before it needs more discussion.",
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc40eb40_ac67e28e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-12T10:34:37Z",
      "side": 1,
      "message": "Removing the -2 as we had the discussion on how to move forward.",
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b5f5748_0afae958",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-12T09:36:17Z",
      "side": 1,
      "message": "If the tryPut() and the value hasn\u0027t be effectively cached, I believe we shouldn\u0027t also put into mem.\n\nEx:\n\nif(tryPut(store,(KeyWrapper\u003cK\u003e) wrappedKey, (TimedValue\u003cV\u003e) wrappedValue)) {\n    mem.put((K) key, (TimedValue\u003cV\u003e) wrappedValue);\n}",
      "range": {
        "startLine": 289,
        "startChar": 4,
        "endLine": 289,
        "endChar": 51
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f10cf79_6ecb652b",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-01-12T09:39:59Z",
      "side": 1,
      "message": "Why so?\nI thought it was a nice behaviour since it would still allow the item to be cached avoiding repeated context switches related to stack exceptions.\n\nNot being able to store the item is a limitation of chronicle-map, why should we apply the same limitation to the in-memory one?",
      "parentUuid": "0b5f5748_0afae958",
      "range": {
        "startLine": 289,
        "startChar": 4,
        "endLine": 289,
        "endChar": 51
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8409ab5_f3c96800",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-12T09:44:05Z",
      "side": 1,
      "message": "Well, let me give you a real-case scenario: change-notes.\n\nOne of the 300k changes is so big that would blow-up cache-chroniclemap (it\u0027s about 10GB in size). If we keep that in-memory we\u0027re still causing massive issues.\n\nIf something is so bad that blows up our cache, it\u0027s safer to avoid to keep the toxic item.\n\nIt isn\u0027t a cache-chroniclemap issue IMHO, it\u0027s a data issue. That why my initial proposal wasn\u0027t catching cache-chroniclemap exceptions at all, but just include a filter on what items aren\u0027t suitable for caching at all.",
      "parentUuid": "0f10cf79_6ecb652b",
      "range": {
        "startLine": 289,
        "startChar": 4,
        "endLine": 289,
        "endChar": 51
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88bd8bab_b2532f43",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-01-12T09:46:47Z",
      "side": 1,
      "message": "I understand your point, but then wouldn\u0027t this be something that would need to be fixed in the gerrit core?\n\nAlso, being too big for chronicle-map, does not mean the entry is \"too big\" for the gerrit memory allowance, as you can see in the tests I have reproduced the issue with very small key/values.\n\nLet\u0027s discuss",
      "parentUuid": "f8409ab5_f3c96800",
      "range": {
        "startLine": 289,
        "startChar": 4,
        "endLine": 289,
        "endChar": 51
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24f43957_5cf6b62a",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-01-12T09:48:08Z",
      "side": 1,
      "message": "\u003e Why so?\n\u003e I thought it was a nice behaviour since it would still allow the item to be cached avoiding repeated context switches related to stack exceptions.\n\u003e \n\nI thought the same. The only question I have is: can we have any issue if the caches go out of sync?",
      "parentUuid": "0f10cf79_6ecb652b",
      "range": {
        "startLine": 289,
        "startChar": 4,
        "endLine": 289,
        "endChar": 51
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc0fdc0f_e04252f8",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 305,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-12T09:36:17Z",
      "side": 1,
      "message": "Same as above: the mem.put() should be conditioned to the success of tryPut() above.",
      "range": {
        "startLine": 305,
        "startChar": 4,
        "endLine": 305,
        "endChar": 69
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd74298d_54da4e2e",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 305,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-01-12T09:39:59Z",
      "side": 1,
      "message": "See above",
      "parentUuid": "dc0fdc0f_e04252f8",
      "range": {
        "startLine": 305,
        "startChar": 4,
        "endLine": 305,
        "endChar": 69
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26bba961_c754322a",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 305,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-12T09:44:05Z",
      "side": 1,
      "message": "Same observation as above.",
      "parentUuid": "dd74298d_54da4e2e",
      "range": {
        "startLine": 305,
        "startChar": 4,
        "endLine": 305,
        "endChar": 69
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72c67760_16f08f74",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-12T09:36:17Z",
      "side": 1,
      "message": "This is worth a comment as it could be misunderstood by the reader.\n\nIn theory here we *should* fail if tryPut() returns false. However, failing the execution of the loading of the value would result in an application-level exception, therefore we preserve the external functionality but *pretending* tryPut() succeeded anyway.",
      "range": {
        "startLine": 104,
        "startChar": 8,
        "endLine": 104,
        "endChar": 27
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e4b64f3_88c0166d",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-12T09:36:17Z",
      "side": 1,
      "message": "Is this really a success? If tryPut() returns false, we haven\u0027t actually loaded anything in the cache.\n\nOptional (as a follow-up change?): we should track in a metric these failures, as the Gerrit admin may want to track it and raise alarms when caches have values failing to be stored in cache-chroniclemap.",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 139,
        "endChar": 41
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "951e83db_ef968fbc",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-01-12T09:39:59Z",
      "side": 1,
      "message": "Makes sense",
      "parentUuid": "2e4b64f3_88c0166d",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 139,
        "endChar": 41
      },
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8568f70e_fc098819",
        "filename": "src/test/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheTest.java",
        "patchSetId": 4
      },
      "lineNbr": 377,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-01-12T09:36:17Z",
      "side": 1,
      "message": "Once we introduce the metrics of the storage failures (follow-up change?), we should also assert that the storage failures have increased.",
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0da31e0e_22cea03e",
        "filename": "src/test/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheTest.java",
        "patchSetId": 4
      },
      "lineNbr": 377,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-01-12T09:39:59Z",
      "side": 1,
      "message": "👍",
      "parentUuid": "8568f70e_fc098819",
      "revId": "4687abaec5290d158e278dbb59ac078eeb92ecd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}