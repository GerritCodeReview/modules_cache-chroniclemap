{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a4687449_71b19121",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 11,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-10-20T15:28:01Z",
      "side": 1,
      "message": "use",
      "range": {
        "startLine": 11,
        "startChar": 59,
        "endLine": 11,
        "endChar": 63
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c843cfd1_f626a96b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 11,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-10-21T07:32:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4687449_71b19121",
      "range": {
        "startLine": 11,
        "startChar": 59,
        "endLine": 11,
        "endChar": 63
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "858956c8_9eb72379",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-10-20T15:28:01Z",
      "side": 1,
      "message": "contains",
      "range": {
        "startLine": 21,
        "startChar": 27,
        "endLine": 21,
        "endChar": 35
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08b03821_851f72c3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-10-21T07:32:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "858956c8_9eb72379",
      "range": {
        "startLine": 21,
        "startChar": 27,
        "endLine": 21,
        "endChar": 35
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35c49255_8bc68fff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-10-20T15:28:01Z",
      "side": 1,
      "message": "I think this comment might be misleading.\nConfiguring a cache doesn\u0027t necessarily mean that it is the best configuration for it.\n\nThe average of different key and value sizes might change with time.\nThis is the reason why auto-tuning exists.\n\nI think perhaps we should not address configurations as optimal/sub-optimal at all in the code base/comments/commit message.\n\nWhat about `explicit/default` configuration instead?",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 23
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1c72c32_8b543bab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-10-21T07:32:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35c49255_8bc68fff",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 23
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddf1176e_bd3f47a8",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-10-20T15:28:01Z",
      "side": 1,
      "message": "What\u0027s the reason behind refactoring this configuration reading?",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 88,
        "endChar": 64
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eafc7e2_7f714f7b",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-10-21T07:32:04Z",
      "side": 1,
      "message": "only `getString` allows for getting value without giving the default - which is actually needed so that `Defaults` are called only no configuration is present",
      "parentUuid": "ddf1176e_bd3f47a8",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 88,
        "endChar": 64
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca7daf2c_91cdc1b0",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-10-26T16:51:29Z",
      "side": 1,
      "message": "Have you considered having `null` as default value?\n\n```\n Optional.ofNullable(cfg.getLong(\"cache\", configKey, \"avgValueSize\", null))\n .orElseGet(() -\u003e defaults.maxEntriesFor(configKey))\n```\n\nI also think we should explain with a small comment the reason of not using the default directly (that is, to avoid the side effect of emitting a metric).\n\nWDYT?",
      "parentUuid": "7eafc7e2_7f714f7b",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 88,
        "endChar": 64
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c126141_6ea3e58a",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-10-27T07:21:53Z",
      "side": 1,
      "message": "Nice try ;) however `get[Long|Int]` operate on primitives e.g.:\n```\npublic long getLong(String section, String name, long defaultValue)\n```\n\nIOW one cannot use `null` for primitive value :/\n\nwith regards to\n\u003e (...) I also think we should explain with a small comment the reason (...)\n\nThat makes sene and I will add some description",
      "parentUuid": "ca7daf2c_91cdc1b0",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 88,
        "endChar": 64
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9798c0db_c1259334",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-10-27T07:51:02Z",
      "side": 1,
      "message": "The reason we are facing this (seemingly unrelated) refactoring is that we are side-effecting in the `defaults.\u003cmethod\u003e`.\n\nCalling `defaults.averageKeySizeFor`, for example, doesn\u0027t just give the average key size, it _also_ takes care of emitting a metric datapoint.\n\nBecause of it one can never find out what the default is without also emitting the metric. This tight coupling seems wrong imho.\n\nHow about we _separate_ the two concerns and have a _dedicated_ method which will check all the caches relying on defaults and explicitly emit the relevant metrics.\n\nI think it will be better because:\n- defaults.\u003cmethod\u003e will just return the default, without side-effecting.\n- One can find out the default without erroneously polluting metrics\n- We don\u0027t need this refactoring and we can still make full use of the `config.get\u003cType\u003e` features.\n\nI apologise for not having suggested this earlier, but I never actually had the time to go through this properly.\n\nWhat\u0027s your opinion, do you think this is a viable option that will help improve the code?",
      "parentUuid": "6c126141_6ea3e58a",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 88,
        "endChar": 64
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8d9983f_50f43292",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-10-27T08:00:03Z",
      "side": 1,
      "message": "Regardless of what we decide it will not change this refactoring as one needs to provide the primitive value to `get[Long|Int]` methods IOW only when value is not provided in the `gerrit.config` defaults should be used together with the metrics emission so if that is the driver here it doesn\u0027t count.\n\nHaving said that my original intention was to encapsulate it within the `Defaults` class so that one doesn\u0027t have to think about it metrics emission... I can separate it from defaults but I\u0027m afraid that the logic has to stay somewhere anyway WDYT?",
      "parentUuid": "9798c0db_c1259334",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 88,
        "endChar": 64
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79610b56_abf8afea",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-10-27T16:24:35Z",
      "side": 1,
      "message": "\u003e Regardless of what we decide it will not change this refactoring as one needs to provide the primitive value to `get[Long|Int]` methods IOW only when value is not provided in the `gerrit.config` defaults should be used together with the metrics emission so if that is the driver here it doesn\u0027t count.\n\nI don\u0027t follow to be honest, I thought the only reason of this refactoring was to avoid callind the default prematuerly (and thus causing the emission of the metric as a false positive).\n\n\u003e \n\u003e Having said that my original intention was to encapsulate it within the `Defaults` class so that one doesn\u0027t have to think about it metrics emission... I can separate it from defaults but I\u0027m afraid that the logic has to stay somewhere anyway WDYT?\n\nYes I think the logic will be here still, in a method like:\n\n```emitMetricsForNonConfiguredCaches```\n\nThen the calls to `defaults.*` methods can be done as before without having to worry about metrics emission.\n\nI think emitting _explicitly_ is better than side effecting with it.\n\nApologies if I am not following all the way through, we can pair together on this, perhaps it\u0027ll be easier?",
      "parentUuid": "e8d9983f_50f43292",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 88,
        "endChar": 64
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6c2c78b_1100a126",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheModule.java",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-10-20T15:28:01Z",
      "side": 1,
      "message": "Shouldn\u0027t also `Defaults` be bound as `singleton`?",
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8050ff75_1e1e4662",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheModule.java",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-10-21T07:32:04Z",
      "side": 1,
      "message": "It doesn\u0027t matter as long as metric is a singleton but it could be from the memory consumption perspective ;)",
      "parentUuid": "b6c2c78b_1100a126",
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fd3f84c_19baeb85",
        "filename": "src/main/resources/Documentation/tuning.md",
        "patchSetId": 10
      },
      "lineNbr": 188,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-10-20T15:28:01Z",
      "side": 1,
      "message": "This needs to be removed",
      "range": {
        "startLine": 188,
        "startChar": 60,
        "endLine": 188,
        "endChar": 73
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9f21ea2_2bfbd6d0",
        "filename": "src/main/resources/Documentation/tuning.md",
        "patchSetId": 10
      },
      "lineNbr": 188,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-10-21T07:32:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7fd3f84c_19baeb85",
      "range": {
        "startLine": 188,
        "startChar": 60,
        "endLine": 188,
        "endChar": 73
      },
      "revId": "974cf0e35dbccd66a07d7fa0ba665095dd3729dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}