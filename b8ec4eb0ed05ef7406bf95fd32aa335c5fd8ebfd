{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b5baec17_84fb8718",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-02-23T13:32:27Z",
      "side": 1,
      "message": "@here does anyone know whether it\u0027s possible to get hold of the HttpInjector from an SSH command?\n\nWhen running some integration tests I can see that via the plugin.getHttpInjector(), the PersistentCacheDef is bound via:\n\n```\n{Key@9933} \"Key[type\u003dcom.google.gerrit.server.cache.PersistentCacheDef\u003cjava.lang.String, com.google.gerrit.httpd.WebSessionManager$Val\u003e, annotation\u003d@com.google.inject.name.Named(value\u003d\"web_sessions\")]\" -\u003e {ProviderInstanceBindingImpl@9934} \"ProviderInstanceBinding{key\u003dKey[type\u003dcom.google.gerrit.server.cache.PersistentCacheDef\u003cjava.lang.String, com.google.gerrit.httpd.WebSessionManager$Val\u003e, annotation\u003d@com.google.inject.name.Named(value\u003d\"web_sessions\")], source\u003dcom.google.gerrit.server.plugins.PluginGuiceEnvironment$2.configure(PluginGuiceEnvironment.java:551), scope\u003dScopes.NO_SCOPE, provider\u003dConstantFactory{value\u003dcom.google.gerrit.server.cache.PersistentCacheProvider@b80b461}[Scopes.SINGLETON]}\"\n```\n",
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc3f5e22_48c39be2",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-24T08:43:53Z",
      "side": 1,
      "message": "Why do we need to de-serialise the data? We are just moving stuff out of H2 and putting into chroniclemap, isn\u0027t it?",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 163,
        "endChar": 96
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deb3d688_f0abae35",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-24T00:12:51Z",
      "side": 1,
      "message": "This is pretty much a hack to me: we should not go into the details of how stuff was defined and injected, isn\u0027t it?\n\nWhy not simply listing the files under the \u0027/cache\u0027 directory?\nIt is way easier and cleaner than relying on internal injector\u0027s bindings.",
      "range": {
        "startLine": 182,
        "startChar": 47,
        "endLine": 182,
        "endChar": 95
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9729c7c7_77e75cff",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-02-24T07:43:35Z",
      "side": 1,
      "message": "yep, that\u0027s the approach we used for the analyze-h2-caches command, but I don\u0027t think grabbing the caches from files would help in this case.\n\nWe need the *cache definition* in order to construct the chronicle-map cache to migrate into, and that cannot be inferred by just looking at the files, unless I am missing something.\n\nWDYT?",
      "parentUuid": "deb3d688_f0abae35",
      "range": {
        "startLine": 182,
        "startChar": 47,
        "endLine": 182,
        "endChar": 95
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "140a93e7_6e8d08ca",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-24T08:43:53Z",
      "side": 1,
      "message": "\u003e yep, that\u0027s the approach we used for the analyze-h2-caches command, but I don\u0027t think grabbing the caches from files would help in this case.\n\u003e \n\u003e We need the *cache definition* in order to construct the chronicle-map cache to migrate into, and that cannot be inferred by just looking at the files, unless I am missing something.\n\nThey can be read from the config, isn\u0027t it?\nWith regards to serialisers, we do not need them as we are just moving the data from one storage to another.",
      "parentUuid": "9729c7c7_77e75cff",
      "range": {
        "startLine": 182,
        "startChar": 47,
        "endLine": 182,
        "endChar": 95
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8d55bd2_14659de2",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-24T08:53:06Z",
      "side": 1,
      "message": "Looking at the code, we need for migration a special ChronicleMapMarshallerAdapter that would just adds the length at the beginning of the value and the time.",
      "parentUuid": "140a93e7_6e8d08ca",
      "range": {
        "startLine": 182,
        "startChar": 47,
        "endLine": 182,
        "endChar": 95
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}