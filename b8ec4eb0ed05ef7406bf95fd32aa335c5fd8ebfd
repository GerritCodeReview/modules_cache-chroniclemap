{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b5baec17_84fb8718",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-02-23T13:32:27Z",
      "side": 1,
      "message": "@here does anyone know whether it\u0027s possible to get hold of the HttpInjector from an SSH command?\n\nWhen running some integration tests I can see that via the plugin.getHttpInjector(), the PersistentCacheDef is bound via:\n\n```\n{Key@9933} \"Key[type\u003dcom.google.gerrit.server.cache.PersistentCacheDef\u003cjava.lang.String, com.google.gerrit.httpd.WebSessionManager$Val\u003e, annotation\u003d@com.google.inject.name.Named(value\u003d\"web_sessions\")]\" -\u003e {ProviderInstanceBindingImpl@9934} \"ProviderInstanceBinding{key\u003dKey[type\u003dcom.google.gerrit.server.cache.PersistentCacheDef\u003cjava.lang.String, com.google.gerrit.httpd.WebSessionManager$Val\u003e, annotation\u003d@com.google.inject.name.Named(value\u003d\"web_sessions\")], source\u003dcom.google.gerrit.server.plugins.PluginGuiceEnvironment$2.configure(PluginGuiceEnvironment.java:551), scope\u003dScopes.NO_SCOPE, provider\u003dConstantFactory{value\u003dcom.google.gerrit.server.cache.PersistentCacheProvider@b80b461}[Scopes.SINGLETON]}\"\n```\n",
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9b15089_e248a821",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-24T08:56:51Z",
      "side": 1,
      "message": "Another idea: instead of following my suggestion of working at lower level (raw files and serialised data) you could *also* change this into a REST-API and just inject *ALL* the caches in the constructor, instead of using hacks to get them from the Guice bindings.\n\nThat would be easier, simpler and safer IMHO.\n\nWDYT?",
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c030c16_9cce8547",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-02-24T15:14:14Z",
      "side": 1,
      "message": "I don\u0027t understand what you mean by \"ALL caches\".\nHow do we know which caches should be migrated? isn\u0027t guice the only component that has visibility on what caches have been bound?\n\nThe idea of getting cache definitions from guice is to avoid guessing \u0027which\u0027 caches should be migrated: plugins for example might be installing some caches that also need migrating (i.e. github plugin, or analytics)\n\nWe could be looking at DynamicMap\u003cCache\u003c?,?\u003e, which has all caches, but that does not give us the cache definitions, only the cache itself and we need the cache definition to construct chroniclemap.",
      "parentUuid": "b9b15089_e248a821",
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc3f5e22_48c39be2",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-24T08:43:53Z",
      "side": 1,
      "message": "Why do we need to de-serialise the data? We are just moving stuff out of H2 and putting into chroniclemap, isn\u0027t it?",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 163,
        "endChar": 96
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad10784c_305ede4a",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-02-24T15:14:14Z",
      "side": 1,
      "message": "\u003e Why do we need to de-serialise the data?\n\nWhere H2 stores V objects Chronicle-map stores TimeValue\u003cV\u003e objects, so we need to transform one into the other.\n\n\u003e We are just moving stuff out of H2 and putting into chroniclemap, isn\u0027t it?\n\nputting data into chronicle-map requires to use the chronicle-map API, which AFAIK, requires a key K and a value V, not array of bytes.",
      "parentUuid": "bc3f5e22_48c39be2",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 163,
        "endChar": 96
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deb3d688_f0abae35",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-24T00:12:51Z",
      "side": 1,
      "message": "This is pretty much a hack to me: we should not go into the details of how stuff was defined and injected, isn\u0027t it?\n\nWhy not simply listing the files under the \u0027/cache\u0027 directory?\nIt is way easier and cleaner than relying on internal injector\u0027s bindings.",
      "range": {
        "startLine": 182,
        "startChar": 47,
        "endLine": 182,
        "endChar": 95
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9729c7c7_77e75cff",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-02-24T07:43:35Z",
      "side": 1,
      "message": "yep, that\u0027s the approach we used for the analyze-h2-caches command, but I don\u0027t think grabbing the caches from files would help in this case.\n\nWe need the *cache definition* in order to construct the chronicle-map cache to migrate into, and that cannot be inferred by just looking at the files, unless I am missing something.\n\nWDYT?",
      "parentUuid": "deb3d688_f0abae35",
      "range": {
        "startLine": 182,
        "startChar": 47,
        "endLine": 182,
        "endChar": 95
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "140a93e7_6e8d08ca",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-24T08:43:53Z",
      "side": 1,
      "message": "\u003e yep, that\u0027s the approach we used for the analyze-h2-caches command, but I don\u0027t think grabbing the caches from files would help in this case.\n\u003e \n\u003e We need the *cache definition* in order to construct the chronicle-map cache to migrate into, and that cannot be inferred by just looking at the files, unless I am missing something.\n\nThey can be read from the config, isn\u0027t it?\nWith regards to serialisers, we do not need them as we are just moving the data from one storage to another.",
      "parentUuid": "9729c7c7_77e75cff",
      "range": {
        "startLine": 182,
        "startChar": 47,
        "endLine": 182,
        "endChar": 95
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8d55bd2_14659de2",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-24T08:53:06Z",
      "side": 1,
      "message": "Looking at the code, we need for migration a special ChronicleMapMarshallerAdapter that would just adds the length at the beginning of the value and the time.",
      "parentUuid": "140a93e7_6e8d08ca",
      "range": {
        "startLine": 182,
        "startChar": 47,
        "endLine": 182,
        "endChar": 95
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "388c4fc4_7fb0c3fd",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/MigrateH2Caches.java",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-02-24T15:14:14Z",
      "side": 1,
      "message": "\u003e They can be read from the config, isn\u0027t it?\n\nI don\u0027t think reading from config would help:\n- Not every cache is necessarily in the config, where defaults are used.\n- config does not have details on which parameters are stored in the cache\n\n\u003e we need for migration a special ChronicleMapMarshallerAdapter that would just adds the length at the beginning of the value and the time.\n\nThis could make the migration quicker, but I don\u0027t think it will help with this issue: We still need to understand which types the cache is for, because that\u0027s going to be written in the header of the chronicle-map file and it is also needed to construct the chronicle-map cache.",
      "parentUuid": "c8d55bd2_14659de2",
      "range": {
        "startLine": 182,
        "startChar": 47,
        "endLine": 182,
        "endChar": 95
      },
      "revId": "b8ec4eb0ed05ef7406bf95fd32aa335c5fd8ebfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}