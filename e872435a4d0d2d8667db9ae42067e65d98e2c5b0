{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eb2c3991_e0ef64ae",
        "filename": "BUILD",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-28T16:50:23Z",
      "side": 1,
      "message": "@davido: Is there a shorter form to add this new test dependency?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 130
      },
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cc260a0_f86eb8d8",
        "filename": "BUILD",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-28T17:16:49Z",
      "side": 1,
      "message": "I added comment on this BUILD file you added. Another option would be to add this new rule here, in this root file:\n\n  java_library(\n    name \u003d \"chroniclemap-test-lib\",\n    testonly \u003d True,\n    srcs \u003d [\"src/test/java/com/googlesource/gerrit/modules/cache/chroniclemap/TestPersistentCacheDef.java\"],\n    visibility \u003d [\"//visibility:public\"],\n    deps \u003d PLUGIN_DEPS + PLUGIN_TEST_DEPS,\n  )\n\nand use it like this: \":chroniclemap-test-lib\".",
      "parentUuid": "eb2c3991_e0ef64ae",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 130
      },
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efe852df_7bb58521",
        "filename": "BUILD",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-28T18:02:11Z",
      "side": 1,
      "message": "I understand, thanks!\nIs this better than the current approach? Do we have any best practices when it comes to this sort of things?",
      "parentUuid": "7cc260a0_f86eb8d8",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 130
      },
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8edb8e00_e0223724",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-01-28T17:55:29Z",
      "side": 1,
      "message": "isInMemoryCache? The methods that return a boolean are typically more readable if they have a \"to be\" verb in the method name.",
      "range": {
        "startLine": 129,
        "startChar": 25,
        "endLine": 129,
        "endChar": 38
      },
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee1369c1_17777693",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-01-28T17:55:29Z",
      "side": 1,
      "message": "This is not going to change for every cache: can we use the same pattern used in H2CacheFactory?\n\nP.S. You see my point about doing that in Gerrit, isn\u0027t it? We have to basically copy\u0026paste H2CacheFactory code here, and we should do it consistently IMHO.",
      "range": {
        "startLine": 130,
        "startChar": 11,
        "endLine": 130,
        "endChar": 78
      },
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83d2cbd3_2c2177e6",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-01-28T17:55:29Z",
      "side": 1,
      "message": "nit: unrelated change?",
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fb65ce3_3450a51c",
        "filename": "src/test/java/com/googlesource/gerrit/modules/cache/chroniclemap/lib/BUILD",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-28T17:16:49Z",
      "side": 1,
      "message": "Why you added this new BUILD file only for this one package? and not just add this rule in the main BUILD file in root directory of this plugin?",
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a098570_5d525ccb",
        "filename": "src/test/java/com/googlesource/gerrit/modules/cache/chroniclemap/lib/BUILD",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-01-28T17:55:29Z",
      "side": 1,
      "message": "nit: unrelated change. Can you extract into its own change?",
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c07dd66_d12be837",
        "filename": "src/test/java/com/googlesource/gerrit/modules/cache/chroniclemap/lib/BUILD",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-28T18:02:11Z",
      "side": 1,
      "message": "See my explanation regarding the introduction of a lib package to host all test libraries, not sure if it makes sense.",
      "parentUuid": "7fb65ce3_3450a51c",
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "230a4461_f8a0aafb",
        "filename": "src/test/java/com/googlesource/gerrit/modules/cache/chroniclemap/lib/TestPersistentCacheDef.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-01-28T17:55:29Z",
      "side": 1,
      "message": "This looks a bit overkill IMHO: we just need to get a fake implementation of a PersistentCacheDef that responds to name() and configKey() methods: why don\u0027t we just use a mock for it?\n\nWe would avoid:\n- brand-new class\n- BUILD file to create a library",
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bdf2924_0035dc7d",
        "filename": "src/test/java/com/googlesource/gerrit/modules/cache/chroniclemap/lib/TestPersistentCacheDef.java",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-28T17:16:49Z",
      "side": 1,
      "message": "Why add yet another lib package?  Can\u0027t it just be: com.googlesource.gerrit.modules.cache.chroniclemap ?\n\nIn code-owners plugin we have:\n\n javatests/com/google/gerrit/plugins/codeowners/acceptance/\n\nor in gerrit itself we have:\n\n  java/com/google/gerrit/testing/\n\nor even:\n\n  java/com/google/gerrit/acceptance/",
      "range": {
        "startLine": 14,
        "startChar": 59,
        "endLine": 14,
        "endChar": 62
      },
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4519ccc0_1f290816",
        "filename": "src/test/java/com/googlesource/gerrit/modules/cache/chroniclemap/lib/TestPersistentCacheDef.java",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-01-28T18:02:11Z",
      "side": 1,
      "message": "If I take one of your examples, \"java/com/google/gerrit/testing/\" does the same thing no?\n\nThe \"com.google.gerrit.testing\" package has been introduced to host all test utils, in a single target.\n\nMy intention was the same, to have a \"com.googlesource.gerrit.modules.cache.chroniclemap.lib\" to host all test dependencies, in one target.\n\nIf I had done this in the main package, I would have needed to address one by one the libraries I want, or explicitly exclude any *IT or *Test classes right?\n\nHaving this in a sub package allows to just use *.java as source, because everything in that package will be a library.\n\nWDYT?",
      "parentUuid": "1bdf2924_0035dc7d",
      "range": {
        "startLine": 14,
        "startChar": 59,
        "endLine": 14,
        "endChar": 62
      },
      "revId": "e872435a4d0d2d8667db9ae42067e65d98e2c5b0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}