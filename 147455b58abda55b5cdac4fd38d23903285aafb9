{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ecc6bc4c_d51a90f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-12-19T23:43:18Z",
      "side": 1,
      "message": "Formatting issues and a couple of nits.",
      "revId": "147455b58abda55b5cdac4fd38d23903285aafb9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a447bdd_7a7b0be1",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/AutoAdjustCaches.java",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1022687
      },
      "writtenOn": "2023-12-18T20:32:43Z",
      "side": 1,
      "message": "Needs reformatting with GJF",
      "tag": "autogenerated:jenkins",
      "revId": "147455b58abda55b5cdac4fd38d23903285aafb9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a782113c_29626f96",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/AutoAdjustCaches.java",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1022687
      },
      "writtenOn": "2023-12-19T18:34:03Z",
      "side": 1,
      "message": "Needs reformatting with GJF",
      "tag": "autogenerated:jenkins",
      "revId": "147455b58abda55b5cdac4fd38d23903285aafb9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69bb69c5_83d0b37c",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/AutoAdjustCaches.java",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1022687
      },
      "writtenOn": "2023-12-20T00:09:15Z",
      "side": 1,
      "message": "Needs reformatting with GJF",
      "tag": "autogenerated:jenkins",
      "revId": "147455b58abda55b5cdac4fd38d23903285aafb9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29ff120d_16da260b",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/AutoAdjustCaches.java",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1022687
      },
      "writtenOn": "2023-12-20T00:09:15Z",
      "side": 1,
      "message": "Needs reformatting with GJF",
      "tag": "autogenerated:jenkins",
      "revId": "147455b58abda55b5cdac4fd38d23903285aafb9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "848596ea_0c01da9e",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/AutoAdjustCaches.java",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-12-19T23:43:18Z",
      "side": 1,
      "message": "```suggestion\n      kTotal \u003d kTotal + serializedKeyLength(cacheName, entry.getKey());\n```",
      "range": {
        "startLine": 197,
        "startChar": 24,
        "endLine": 197,
        "endChar": 25
      },
      "revId": "147455b58abda55b5cdac4fd38d23903285aafb9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84fe43b5_c488c17d",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/AutoAdjustCaches.java",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 1155610
      },
      "writtenOn": "2023-12-20T00:14:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "848596ea_0c01da9e",
      "range": {
        "startLine": 197,
        "startChar": 24,
        "endLine": 197,
        "endChar": 25
      },
      "revId": "147455b58abda55b5cdac4fd38d23903285aafb9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ad472e8_c932889a",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/AutoAdjustCaches.java",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-12-19T23:43:18Z",
      "side": 1,
      "message": "```suggestion\n      vTotal \u003d vTotal + serializedValueLength(cacheName, entry.getValue());\n```",
      "range": {
        "startLine": 198,
        "startChar": 24,
        "endLine": 198,
        "endChar": 25
      },
      "revId": "147455b58abda55b5cdac4fd38d23903285aafb9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7165c90c_dbbec6c3",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/AutoAdjustCaches.java",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1155610
      },
      "writtenOn": "2023-12-20T00:14:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad472e8_c932889a",
      "range": {
        "startLine": 198,
        "startChar": 24,
        "endLine": 198,
        "endChar": 25
      },
      "revId": "147455b58abda55b5cdac4fd38d23903285aafb9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0119fb9e_4c7514b2",
        "filename": "src/test/java/com/googlesource/gerrit/modules/cache/chroniclemap/AutoAdjustCachesIT.java",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-12-20T00:13:59Z",
      "side": 1,
      "message": "The sizes are calculated in a different way in the code:\n```\n  private static int serializedKeyLength(String cacheName, KeyWrapper\u003cObject\u003e keyWrapper) {\n    return CacheSerializers.getKeySerializer(cacheName).serialize(keyWrapper.getValue()).length;\n  }\n\n  private static int serializedValueLength(String cacheName, TimedValue\u003cObject\u003e timedValue) {\n    return CacheSerializers.getValueSerializer(cacheName).serialize(timedValue.getValue()).length;\n  }\n```\n\nI would recommend to expose those two static methods with `@VisibleForTesting` and reuse them in your tests.",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 149,
        "endChar": 55
      },
      "revId": "147455b58abda55b5cdac4fd38d23903285aafb9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}