{
  "comments": [
    {
      "key": {
        "uuid": "6f9e81c2_5ff18011",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-28T22:27:29Z",
      "side": 1,
      "message": "Isn\u0027t too strict? Have you checked if with this default Gerrit actually works normally or not?",
      "range": {
        "startLine": 49,
        "startChar": 26,
        "endLine": 49,
        "endChar": 54
      },
      "revId": "837ae89574fe725e7499f8c53e972e0601cae39e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7844341_36b936d4",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-09-29T07:38:16Z",
      "side": 1,
      "message": "Yep, this is the default. From [1]:\nThe default maximum bloat factor factor is 1.0 - i. e. \"no bloat is expected\".\n\n[1]https://www.javadoc.io/doc/net.openhft/chronicle-map/3.8.0/net/openhft/chronicle/hash/ChronicleHashBuilder.html#maxBloatFactor-double-",
      "parentUuid": "6f9e81c2_5ff18011",
      "range": {
        "startLine": 49,
        "startChar": 26,
        "endLine": 49,
        "endChar": 54
      },
      "revId": "837ae89574fe725e7499f8c53e972e0601cae39e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebe33670_4b04f258",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-29T07:53:40Z",
      "side": 1,
      "message": "\u003e Have you checked if with this default Gerrit actually works normally or not?\n\nCan you answer ^^^^ ? I\u0027ve raised the issue because I saw that the default was too strict and Gerrit caches were blowing up quickly.",
      "parentUuid": "f7844341_36b936d4",
      "range": {
        "startLine": 49,
        "startChar": 26,
        "endLine": 49,
        "endChar": 54
      },
      "revId": "837ae89574fe725e7499f8c53e972e0601cae39e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07886fac_db76b7de",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-09-29T08:57:27Z",
      "side": 1,
      "message": "`maxBloatFactor` represents the maximum accepted ratio between the number of actual entries and the number of entries you configured via the `entries` parameter.\n\nChronicle-map performs better when the actual cache size match the configured size.\n\nSay, for example, you expect 1000 entries (cache.\u003cname\u003e.entries \u003d 1000): if you have 1000 entries on disk, your bloat factor is 1; if you have 2000, bloat factor is 2 and so on.\n\nBasically, `maxBloatFator\u003d1` means:\n\n\"I expect this cache to have at most the number of entries I configured\".\n\nSo to answer your question:\n\u003e  I\u0027ve raised the issue because I saw that the default was too strict and Gerrit caches were blowing up quickly.\n\nimho, the problem with the above was not the default bloat factor, but rather the number of entries you configured did not match the number of entries that were stored.\n\nIf the Gerrit admin is not sure about the number of entries that will be stored and she wants (perhaps momentarily) allow 3 times more, then she can raise the maxBloatFactor to 3 to capture this uncertainty in the configuration.\n\nWDYT?",
      "parentUuid": "ebe33670_4b04f258",
      "range": {
        "startLine": 49,
        "startChar": 26,
        "endLine": 49,
        "endChar": 54
      },
      "revId": "837ae89574fe725e7499f8c53e972e0601cae39e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2435d090_2b385f36",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-29T22:12:26Z",
      "side": 1,
      "message": "\u003e So to answer your question:\n\u003e \u003e  I\u0027ve raised the issue because I saw that the default was too strict and Gerrit caches were blowing up quickly.\n\u003e \n\u003e imho, the problem with the above was not the default bloat factor, but rather the number of entries you configured did not match the number of entries that were stored.\n\nI am talking about the \"out of the box\" configuration: I did not configure anything and Gerrit just blew up. I believe the configuration should be carefully set, however, from a user-experience perspective of the first-time user, we should have defaults that do not blow up.",
      "parentUuid": "07886fac_db76b7de",
      "range": {
        "startLine": 49,
        "startChar": 26,
        "endLine": 49,
        "endChar": 54
      },
      "revId": "837ae89574fe725e7499f8c53e972e0601cae39e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c82a4f00_4de5523a",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-09-30T17:10:14Z",
      "side": 1,
      "message": "I see, perhaps gerrit blew up when you reached a certain amount of changes X. It\u0027d be good to know how many where there and how big.\n\nShould we move this conversation to the last change of this chain[1]?\nThe introduction of the per-cache defaults changes a bit the dynamics because now the maxBloatFactor is also configurable per-cache.\n\nWDYT?\n\n[1]https://gerrit-review.googlesource.com/c/modules/cache-chroniclemap/+/282729",
      "parentUuid": "2435d090_2b385f36",
      "range": {
        "startLine": 49,
        "startChar": 26,
        "endLine": 49,
        "endChar": 54
      },
      "revId": "837ae89574fe725e7499f8c53e972e0601cae39e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}